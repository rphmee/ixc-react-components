When building reusable components, you Docs are your dev environment
The Documentation is the "App" of the library
    -lets you see your components in action
-Documentation goasl
    -Component Description
    -Working Exampels with Code
    -Prop Documentation
        -type, description, default value

-Style Guide
    -Brand Identity, Voice and Tone, Design Language

-Tip: Do not build docs by hand
-Why Generate Docs?
    -code and docs in sync
    -reduces manual coding, less chance of mistake
    -more readable
    -enforced consistency

-Generate custom Doc with tools
-Navigation on left to pages for each component
    -Each page has an Example, code exmaple, props, etc.

-Packages
    -react-docgen (generate react component metadata)
    -chokidar (watch files)
    -highlight.js (syntax highlighted code examples)
    -npm-run-all (run parallel tasks)