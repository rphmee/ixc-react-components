Atomic Design
    -Atoms: Basic Building Blocks
    -Molecules: Group of two or more atoms 
    -Organisms: Groups of molecules functioning together
    -Templates: Components in a Layout
    -Pages: Populated Templates 
    -MVC: Model View Controller
        -Model: Data
        -View: HTML
        -Controller: Logic
        -Not the same concept as React
    -React is like Russian Dolls
        -Nested Components
    -Popularized by Atomic Design by Brad Frost
    -Hierarchy of Components
    -Easier to make a reusable Atom than reusable Organism
    -Atomic Design ~ Modular Design 

Why Atomic Design?
    -Consider the project at multiple layers of abstraction
    -Encourages reuse 
    -Convey more clear intent 

Atoms
    -Smallest building Blocks
    -foundation for component library
    -lay out design base
    
Wrapping HTML Primitives
    -e.g.
        <input type="text"> -> <TextInput />
        <input type="checkbox"> -> <Checkbox />
        <select> -> <PickOneFromList /> or <Dropdown />

Tip 1: Honor the Native DOM API
    -Wrapper should honor the same API
    -For array props, use plurals instead of suffixes
        -userList -> users

Tip 2: Pass Props via Spread
    -e.g. {...props}
    -introduced in ES6
    -avoid spreading unwanted props

Tip 3: Use destructuring with Spread to control which props are passed
    -const Hello = ({name, ...rest})
        -rest doesn't contain name

Tip 4: Create Formatting Components
    -e.g. <Cash>6</Cash> -> $6.00
    -similar to Utility functions