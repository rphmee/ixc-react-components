(window.webpackJsonp=window.webpackJsonp||[]).push([[0],[,,,,,,function(e,r,n){"use strict";var t=n(1),a=n(2),o=n(4),i=n(3),s=n(5),l=n(0),p=n.n(l),u=(n(29),n(66),function(e){function r(e){var n;return Object(t.a)(this,r),(n=Object(o.a)(this,Object(i.a)(r).call(this,e))).state={hover:!1},n}return Object(s.a)(r,e),Object(a.a)(r,[{key:"mouseOver",value:function(){this.setState({hover:!0})}},{key:"mouseOut",value:function(){this.setState({hover:!1})}},{key:"render",value:function(){var e=this,r=this.props,n=r.color,t=r.backgroundColor,a=r.iconHoverColor,o=r.size,i=r.shadow,s=r.handleClick,l=r.shape,u=r.icon;return p.a.createElement("div",{style:{backgroundColor:this.state.hover?n:t,width:o,height:o,borderRadius:"circle"===l?"50%":"10%",border:"3px solid ".concat(n),boxShadow:i&&this.state.hover&&"2px 2px 4px 0px rgba(0, 0, 0, 0.47)",margin:"5px 5px 5px 5px",cursor:this.state.hover&&"pointer"},onMouseOut:function(){return e.mouseOut()},onMouseOver:function(){return e.mouseOver()},onClick:s},p.a.createElement("div",{style:{display:"flex",justifyContent:"center",height:"100%",width:"100%"}},p.a.createElement("i",{className:u,style:{color:this.state.hover?a:n,margin:"auto auto",float:"none"}})))}}]),r}(p.a.Component));u.defaultProps={color:"#0d47a1",backgroundColor:"transparent",iconHoverColor:"white",size:45,shadow:!0,handleClick:function(){console.log("Hello World!")},icon:"fa fa-paw"};var c=u;n.d(r,"a",function(){return c})},function(e,r,n){"use strict";var t=n(0),a=n.n(t);function o(e){var r=e.htmlFor,n=e.label,t=e.required;return a.a.createElement("label",{style:{display:"block"},htmlFor:r},n," ",t&&a.a.createElement("span",{style:{color:"red"}}," *"))}o.defaultProps={};var i=o;n.d(r,"a",function(){return i})},,function(e,r,n){"use strict";var t=n(16),a=n(1),o=n(2),i=n(4),s=n(3),l=n(5),p=n(0),u=n.n(p),c={border:"solid 1px ".concat("#efefef")},d=function(e){function r(){var e,n;Object(a.a)(this,r);for(var t=arguments.length,o=new Array(t),l=0;l<t;l++)o[l]=arguments[l];return(n=Object(i.a)(this,(e=Object(s.a)(r)).call.apply(e,[this].concat(o)))).getColor=function(e){return 100===n.props.percent?"green":n.props.percent>=50?"lightgreen":"red"},n.getWidthAsPercentOfTotalWidth=function(){return parseInt(n.props.width*(n.props.percent/100),10)},n}return Object(l.a)(r,e),Object(o.a)(r,[{key:"render",value:function(){var e=this.props,r=e.percent,n=e.width,a=e.height;return u.a.createElement("div",{style:Object(t.a)({},c,{width:n})},u.a.createElement("div",{style:{width:this.getWidthAsPercentOfTotalWidth(),height:a,backgroundColor:this.getColor(r)}}))}}]),r}(u.a.Component);d.defaultProps={height:5};var m=d;n.d(r,"a",function(){return m})},function(e,r,n){"use strict";var t=n(8),a=n(0),o=n.n(a),i=n(7);var s=function(e){var r=e.htmlId,n=e.name,a=e.label,s=e.type,l=void 0===s?"text":s,p=e.required,u=void 0!==p&&p,c=e.onChange,d=e.placeholder,m=e.value,h=e.error,g=e.children,f=Object(t.a)(e,["htmlId","name","label","type","required","onChange","placeholder","value","error","children"]);return o.a.createElement("div",{style:{marginBottom:16}},o.a.createElement(i.a,{htmlFor:r,label:a,required:u}),o.a.createElement("input",Object.assign({id:r,type:l,name:n,placeholder:d,value:m,onChange:c,style:h&&{border:"solid 1px red"}},f)),g,h&&o.a.createElement("div",{className:"error",style:{color:"red"}},h))};n.d(r,"a",function(){return s})},function(e,r,n){"use strict";var t=n(8),a=n(1),o=n(2),i=n(4),s=n(3),l=n(5),p=n(0),u=n.n(p),c=function(e){function r(e){var n;return Object(a.a)(this,r),(n=Object(i.a)(this,Object(s.a)(r).call(this,e))).state={isEntered:!1,isHover:!1,value:e.value},n}return Object(l.a)(r,e),Object(o.a)(r,[{key:"onClick",value:function(){this.setState({isEntered:!0,isHover:!1})}},{key:"mouseOver",value:function(){this.setState({isHover:!0})}},{key:"mouseOut",value:function(){this.setState({isHover:!1})}},{key:"onClickField",value:function(){this.setState({isEntered:!0})}},{key:"render",value:function(){var e=this,r=this.props,n=(r.height,r.name),a=r.onSubmit,o=r.onChange,i=(r.leftMargin,r.topMargin,r.rightMargin,r.bottomMargin,r.display),s=r.color;Object(t.a)(r,["height","name","onSubmit","onChange","leftMargin","topMargin","rightMargin","bottomMargin","display","color"]);return u.a.createElement("div",{style:{display:i,margin:"0px 0px 0px 0px",padding:"0px"}},this.state.isEntered?u.a.createElement("form",{onSubmit:a.bind(this)},u.a.createElement("input",{type:"text",name:n,placeholder:n,value:this.state.value,style:{display:i,marginBlockStart:"1px",marginBlockEnd:"1px"},onChange:o.bind(this)})):u.a.createElement("p",{onMouseOver:function(){return e.mouseOver()},onMouseOut:function(){return e.mouseOut()},onClick:function(){return e.onClickField()},style:{display:i,border:this.state.isHover?"2px solid white":"",marginBlock:this.state.isHover?"1px":"3px",margin:this.state.isHover?"2px 2px 2px 2px":"4px 4px 4px 4px",color:s}},this.state.value))}}]),r}(u.a.Component);c.defaultProps={value:"PART NAME",leftMargin:"5px",rightMargin:"10px",topMargin:"5px",bottomMargin:"5px",display:"inline-block"};var d=c;n.d(r,"a",function(){return d})},,function(e,r,n){"use strict";var t=n(0),a=n.n(t);var o=function(){return a.a.createElement("svg",{width:"25",height:"25",xmlns:"http://www.w3.org/2000/svg",viewBox:"0 0 22 22"},a.a.createElement("g",{transform:"matrix(.02146 0 0 .02146 1 1)",fill:"gray"},a.a.createElement("path",{d:"m466.07 161.53c-205.6 0-382.8 121.2-464.2 296.1-2.5 5.3-2.5 11.5 0 16.9 81.4 174.9 258.6 296.1 464.2 296.1 205.6 0 382.8-121.2 464.2-296.1 2.5-5.3 2.5-11.5 0-16.9-81.4-174.9-258.6-296.1-464.2-296.1m0 514.7c-116.1 0-210.1-94.1-210.1-210.1 0-116.1 94.1-210.1 210.1-210.1 116.1 0 210.1 94.1 210.1 210.1 0 116-94.1 210.1-210.1 210.1"}),a.a.createElement("circle",{cx:"466.08",cy:"466.02",r:"134.5"})))};n.d(r,"a",function(){return o})},function(e,r,n){"use strict";var t=n(1),a=n(2),o=n(4),i=n(3),s=n(5),l=n(0),p=n.n(l),u=n(6),c=function(e){function r(e){var n;return Object(t.a)(this,r),(n=Object(o.a)(this,Object(i.a)(r).call(this,e))).state={open:!1},n}return Object(s.a)(r,e),Object(a.a)(r,[{key:"onClick",value:function(){this.setState({open:!this.state.open})}},{key:"render",value:function(){var e=this.props,r=e.children,n=e.shape,t=e.backgroundColor;return p.a.createElement("div",{style:{zIndex:this.state.open?100:10,position:"relative"}},p.a.createElement(u.a,{shape:n,backgroundColor:t,handleClick:this.onClick.bind(this)}),p.a.createElement("div",{style:{position:"absolute"}},this.state.open&&r))}}]),r}(p.a.Component);c.defaultProps={shape:"square"};var d=c;n.d(r,"a",function(){return d})},function(e,r,n){"use strict";var t=n(1),a=n(2),o=n(4),i=n(3),s=n(5),l=n(0),p=n.n(l),u=n(51),c=n.n(u),d=(n(29),function(e){function r(e){var n;return Object(t.a)(this,r),(n=Object(o.a)(this,Object(i.a)(r).call(this,e))).toggleExpanded=function(){n.setState({expanded:!n.state.expanded})},n.state={expanded:!1},n}return Object(s.a)(r,e),Object(a.a)(r,[{key:"render",value:function(){var e=this.props,r=e.children,n=e.startHeight,t=e.endHeight,a=e.backgroundColor;return p.a.createElement("div",null,p.a.createElement(c.a,{duration:250,height:this.state.expanded?t:n},p.a.createElement("div",{style:{backgroundColor:a,height:this.state.expanded?t:n},onClick:this.toggleExpanded},r)))}}]),r}(p.a.Component));d.defaultProps={backgroundColor:"#445160",height:50,multiplier:1.5};var m=d;n.d(r,"a",function(){return m})},,function(e,r,n){"use strict";var t=n(8),a=n(1),o=n(2),i=n(4),s=n(3),l=n(5),p=n(0),u=n.n(p),c=(n(7),n(10)),d=n(13),m=n(9),h=function(e){function r(e){var n;return Object(a.a)(this,r),(n=Object(i.a)(this,Object(s.a)(r).call(this,e))).toggleShowPassword=function(e){n.setState(function(e){return{showPassword:!e.showPassword}}),e&&e.preventDefault()},n.state={showPassword:!1},n}return Object(l.a)(r,e),Object(o.a)(r,[{key:"render",value:function(){var e=this.props,r=e.htmlId,n=e.value,a=e.label,o=e.error,i=e.onChange,s=e.placeholder,l=e.maxLength,p=e.showVisibilityToggle,h=e.quality,g=Object(t.a)(e,["htmlId","value","label","error","onChange","placeholder","maxLength","showVisibilityToggle","quality"]),f=this.state.showPassword;return u.a.createElement(c.a,Object.assign({htmlId:r,label:a,placeholder:s,type:f?"text":"password",onChange:i,value:n,maxLength:l,error:o,required:!0},g),p&&u.a.createElement("a",{href:"#",onClick:this.toggleShowPassword,style:{marginLeft:5}},u.a.createElement(d.a,null)),n.length>0&&h&&u.a.createElement(m.a,{percent:h,width:130}))}}]),r}(u.a.Component);h.defaultProps={maxLength:50,showVisibilityToggle:!1,label:"Password"};var g=h;n.d(r,"a",function(){return g})},function(e,r,n){},,,function(e,r){e.exports=[{name:"ClickToEnterTextField",description:"Text Input with integrated label to enforce consistency in layout, error display, label placement",props:{name:{type:{name:"string"},required:!0,description:"Input Name. Recommend setting this to match object's property so a single change handler can be used"},type:{type:{name:"enum",value:[{value:'"text"',computed:!1},{value:'"number"',computed:!1},{value:'"password"',computed:!1}]},required:!1,description:"Input Type"},required:{type:{name:"bool"},required:!1,description:"Mark label with asterisk if required"},onChange:{type:{name:"func"},required:!0,description:"Function to call onChange"},onSubmit:{type:{name:"func"},required:!0,description:"Function to call onSubmit"},placeholder:{type:{name:"string"},required:!1,description:"Placeholder to display when empty"},value:{type:{name:"any"},required:!1,description:"Value",defaultValue:{value:'"PART NAME"',computed:!1}},error:{type:{name:"string"},required:!1,description:"String to display when error occues"},children:{type:{name:"node"},required:!1,description:"Child component to display next to the input"},display:{type:{name:"string"},required:!1,description:"Display Format",defaultValue:{value:'"inline-block"',computed:!1}},leftMargin:{type:{name:"string"},required:!1,description:"Left Margin",defaultValue:{value:'"5px"',computed:!1}},topMargin:{type:{name:"string"},required:!1,description:"Top Margin",defaultValue:{value:'"5px"',computed:!1}},bottomMargin:{type:{name:"string"},required:!1,description:"Bottom Margin",defaultValue:{value:'"5px"',computed:!1}},rightMargin:{type:{name:"string"},required:!1,description:"Right Margin",defaultValue:{value:'"10px"',computed:!1}},color:{type:{name:"string"},required:!1,description:"Text Color"}},code:'import React from "react";\r\nimport PropTypes from "prop-types";\r\n\r\n/** Text Input with integrated label to enforce consistency in layout, error display, label placement */\r\nclass ClickToEnterTextField extends React.Component {\r\n  constructor(props) {\r\n    super(props);\r\n    this.state = { isEntered: false, isHover: false, value: props.value };\r\n  }\r\n\r\n  onClick() {\r\n    this.setState({ isEntered: true, isHover: false });\r\n  }\r\n\r\n  mouseOver() {\r\n    this.setState({ isHover: true });\r\n  }\r\n\r\n  mouseOut() {\r\n    this.setState({ isHover: false });\r\n  }\r\n\r\n  onClickField() {\r\n    this.setState({ isEntered: true });\r\n  }\r\n\r\n  render() {\r\n    const {\r\n      height,\r\n      name,\r\n      onSubmit,\r\n      onChange,\r\n      leftMargin,\r\n      topMargin,\r\n      rightMargin,\r\n      bottomMargin,\r\n      display,\r\n      color,\r\n      ...props\r\n    } = this.props;\r\n    return (\r\n      <div\r\n        style={{\r\n          display: display,\r\n          margin: "0px 0px 0px 0px",\r\n          padding: "0px"\r\n        }}\r\n      >\r\n        {this.state.isEntered ? (\r\n          <form onSubmit={onSubmit.bind(this)}>\r\n            <input\r\n              type="text"\r\n              name={name}\r\n              placeholder={name}\r\n              value={this.state.value}\r\n              style={{\r\n                display: display,\r\n                marginBlockStart: "2px",\r\n                marginBlockEnd: "2px"\r\n              }}\r\n              onChange={onChange.bind(this)}\r\n            />\r\n          </form>\r\n        ) : (\r\n          <p\r\n            onMouseOver={() => this.mouseOver()}\r\n            onMouseOut={() => this.mouseOut()}\r\n            onClick={() => this.onClickField()}\r\n            style={{\r\n              display: display,\r\n              border: this.state.isHover ? "2px solid white" : "",\r\n              marginBlock: this.state.isHover ? "1px" : "3px",\r\n              margin: this.state.isHover\r\n                ? "2px 2px 2px 2px"\r\n                : "4px 4px 4px 4px",\r\n              color: color\r\n            }}\r\n          >\r\n            {this.state.value}\r\n          </p>\r\n        )}\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nClickToEnterTextField.propTypes = {\r\n  /** Input Name. Recommend setting this to match object\'s property so a single change handler can be used */\r\n  name: PropTypes.string.isRequired,\r\n\r\n  /** Input Type */\r\n  type: PropTypes.oneOf(["text", "number", "password"]),\r\n\r\n  /** Mark label with asterisk if required */\r\n  required: PropTypes.bool,\r\n\r\n  /** Function to call onChange */\r\n  onChange: PropTypes.func.isRequired,\r\n\r\n  /** Function to call onSubmit */\r\n  onSubmit: PropTypes.func.isRequired,\r\n\r\n  /** Placeholder to display when empty */\r\n  placeholder: PropTypes.string,\r\n\r\n  /** Value */\r\n  value: PropTypes.any,\r\n\r\n  /** String to display when error occues */\r\n  error: PropTypes.string,\r\n\r\n  /** Child component to display next to the input */\r\n  children: PropTypes.node,\r\n\r\n  /** Display Format */\r\n  display: PropTypes.string,\r\n\r\n  /** Left Margin */\r\n  leftMargin: PropTypes.string,\r\n\r\n  /** Top Margin */\r\n  topMargin: PropTypes.string,\r\n\r\n  /** Bottom Margin */\r\n  bottomMargin: PropTypes.string,\r\n\r\n  /** Right Margin */\r\n  rightMargin: PropTypes.string,\r\n\r\n  /** Text Color */\r\n  color: PropTypes.string\r\n};\r\n\r\nClickToEnterTextField.defaultProps = {\r\n  value: "PART NAME",\r\n  leftMargin: "5px",\r\n  rightMargin: "10px",\r\n  topMargin: "5px",\r\n  bottomMargin: "5px",\r\n  display: "inline-block"\r\n};\r\n\r\nexport default ClickToEnterTextField;\r\n',examples:[{name:"ExampleTextField",description:"Optional TextBox",code:'import React from "react";\r\nimport ClickToEnterTextField from "ps-react/ClickToEnterTextField";\r\n\r\n/** Optional TextBox */\r\nexport default function ExampleTextField() {\r\n  function onSubmit(event) {\r\n    this.setState({isEntered: false});\r\n    this.setState({isHover: false});\r\n    /** make any additonal calls or logic when submitting here, e.g. updating the DB */\r\n    event.preventDefault();\r\n  }\r\n\r\n  function onChange(event) {\r\n    this.setState({ value: event.target.value });\r\n    /** make any additional calls or logic when submitting here */\r\n  }\r\n\r\n  return (\r\n    <ClickToEnterTextField name="partname" onChange={onChange} onSubmit={onSubmit} />\r\n  );\r\n}\r\n'}]},{name:"ExpandingBar",description:"",props:{backgroundColor:{type:{name:"string"},required:!1,description:"Background Color",defaultValue:{value:'"#445160"',computed:!1}},height:{type:{name:"number"},required:!1,description:"Bar Height",defaultValue:{value:"50",computed:!1}},multiplier:{type:{name:"number"},required:!1,description:"Factor to Expand By",defaultValue:{value:"1.5",computed:!1}}},code:'import React from "react";\r\nimport PropTypes from "prop-types";\r\nimport AnimateHeight from "react-animate-height";\r\n\r\nclass ExpandingBar extends React.Component {\r\n  constructor(props) {\r\n    super(props);\r\n    this.state = { currentHeight: props.height, expanded: false };\r\n  }\r\n\r\n  toggleHeight = () => {\r\n    this.setState({\r\n      currentHeight:\r\n        this.state.currentHeight === this.props.height\r\n          ? "auto"\r\n          : this.props.height,\r\n      expanded: !this.state.expanded\r\n    });\r\n  };\r\n\r\n  render() {\r\n    const { currentHeight } = this.state;\r\n    const { children, height, backgroundColor } = this.props;\r\n    return (\r\n      <div>\r\n        <AnimateHeight duration={250} height={currentHeight}>\r\n          <div\r\n            style={{\r\n              backgroundColor: backgroundColor,\r\n              height: "auto"\r\n            }}\r\n            onClick={this.toggleHeight}\r\n          >\r\n            {children}\r\n          </div>\r\n        </AnimateHeight>\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nExpandingBar.propTypes = {\r\n  /** Background Color */\r\n  backgroundColor: PropTypes.string,\r\n\r\n  /** Bar Height */\r\n  height: PropTypes.number,\r\n\r\n  /** Factor to Expand By */\r\n  multiplier: PropTypes.number\r\n};\r\n\r\nExpandingBar.defaultProps = {\r\n  /** IX Extract Color */\r\n  backgroundColor: "#445160",\r\n\r\n  /** Height */\r\n  height: 50,\r\n\r\n  /** Expansion Factor */\r\n  multiplier: 1.5\r\n};\r\n\r\nexport default ExpandingBar;\r\n',examples:[{name:"ExampleBar",description:"",code:'import React from "react";\r\nimport ExpandingBar from "ps-react/ExpandingBar";\r\nimport ForTesting from "ps-react/ForTesting";\r\n\r\nexport default function ExampleBar() {\r\n  return (\r\n    <>\r\n      <ExpandingBar duration={500} startHeight={100} endHeight={150}>\r\n        <div style={{ height: "auto" }}>\r\n          <i\r\n            className={"fa fa-cubes fa-3x"}\r\n            style={{\r\n              margin: "auto auto",\r\n              float: "none",\r\n              color: "#0d47a1",\r\n              display: "inline-block",\r\n              height: "100%"\r\n            }}\r\n          />\r\n          <div\r\n            style={{\r\n              display: "inline-block",\r\n              marginLeft: "10px",\r\n              marginTop: "0px"\r\n            }}\r\n          >\r\n            <div>\r\n              <h1\r\n                style={{\r\n                  display: "inline-block",\r\n                  marginBottom: "0px",\r\n                  color: "white"\r\n                }}\r\n              >\r\n                PART NAME\r\n              </h1>\r\n            </div>\r\n            <div>\r\n              <h2\r\n                style={{\r\n                  display: "inline-block",\r\n                  marginTop: "0px",\r\n                  color: "white"\r\n                }}\r\n              >\r\n                PART NUMBER\r\n              </h2>\r\n              <h2\r\n                style={{\r\n                  display: "inline-block",\r\n                  marginLeft: "20px",\r\n                  marginTop: "0px",\r\n                  color: "white"\r\n                }}\r\n              >\r\n                PART REVISION\r\n              </h2>\r\n            </div>\r\n          </div>\r\n          <div />\r\n        </div>\r\n      </ExpandingBar>\r\n    </>\r\n  );\r\n}\r\n'},{name:"IxBarExample",description:"",code:'import React from "react";\r\nimport ExpandingBar from "ps-react/ExpandingBar";\r\nimport ClickToEnterTextField from "ps-react/ClickToEnterTextField";\r\n\r\nexport default function ExampleBar() {\r\n  function onSubmit(event) {\r\n    this.setState({ isEntered: false });\r\n    this.setState({ isHover: false });\r\n    /** make any additonal calls or logic when submitting here, e.g. updating the DB */\r\n    event.preventDefault();\r\n  }\r\n\r\n  function onChange(event) {\r\n    this.setState({ value: event.target.value });\r\n    /** make any additional calls or logic when submitting here */\r\n  }\r\n\r\n  return (\r\n    <ExpandingBar duration={500} height="auto">\r\n      <div style={{ height: "auto", display: "flex", flexDirection: "row" }}>\r\n        <div style={{ display: "flex", alignItems: "center" }}>\r\n          <i className={"fa fa-cubes fa-3x"} style={{ color: "#0d47a1" }} />\r\n        </div>\r\n        <div\r\n          style={{\r\n            display: "inline-block",\r\n            marginLeft: "10px",\r\n            marginTop: "0px"\r\n          }}\r\n        >\r\n          <ClickToEnterTextField\r\n            leftMargin="10px"\r\n            topMargin="10px"\r\n            color="white"\r\n            name="partname"\r\n            onChange={onChange}\r\n            onSubmit={onSubmit}\r\n            value="BLACK STEEL MULTI TOOL"\r\n          />\r\n          <div>\r\n            <ClickToEnterTextField\r\n              bottomMargin="10px"\r\n              topMargin="5px"\r\n              leftMargin="10px"\r\n              color="white"\r\n              name="partnum"\r\n              onChange={onChange}\r\n              onSubmit={onSubmit}\r\n              value="PRT-2322"\r\n            />\r\n            <ClickToEnterTextField\r\n              name="partrev"\r\n              onChange={onChange}\r\n              onSubmit={onSubmit}\r\n              bottomMargin="10px"\r\n              topMargin="5px"\r\n              leftMargin="50px"\r\n              value="B3"\r\n              color="white"\r\n            />\r\n          </div>\r\n        </div>\r\n      </div>\r\n    </ExpandingBar>\r\n  );\r\n}\r\n'}]},{name:"EyeIcon",description:"SVG Eye Icon",code:'import React from "react";\r\n\r\n/** SVG Eye Icon */\r\nfunction EyeIcon() {\r\n  // Attribution: Fabian Alexis at https://commons.wikimedia.org/wiki/File:Antu_view-preview.svg\r\n  return (\r\n    <svg\r\n      width="25"\r\n      height="25"\r\n      xmlns="http://www.w3.org/2000/svg"\r\n      viewBox="0 0 22 22"\r\n    >\r\n      <g transform="matrix(.02146 0 0 .02146 1 1)" fill="gray">\r\n        <path d="m466.07 161.53c-205.6 0-382.8 121.2-464.2 296.1-2.5 5.3-2.5 11.5 0 16.9 81.4 174.9 258.6 296.1 464.2 296.1 205.6 0 382.8-121.2 464.2-296.1 2.5-5.3 2.5-11.5 0-16.9-81.4-174.9-258.6-296.1-464.2-296.1m0 514.7c-116.1 0-210.1-94.1-210.1-210.1 0-116.1 94.1-210.1 210.1-210.1 116.1 0 210.1 94.1 210.1 210.1 0 116-94.1 210.1-210.1 210.1" />\r\n        <circle cx="466.08" cy="466.02" r="134.5" />\r\n      </g>\r\n    </svg>\r\n  );\r\n}\r\n\r\nexport default EyeIcon;\r\n',examples:[{name:"ExampleEye",description:"",code:'import React from "react";\r\nimport EyeIcon from "ps-react/EyeIcon";\r\n\r\nexport default function EyeIconExample() {\r\n  return <EyeIcon />;\r\n}\r\n'}]},{name:"ForTesting",description:"",code:'import React from "react";\r\n\r\nclass ForTesting extends React.Component {\r\n  constructor(props) {\r\n    super(props);\r\n    this.state = { tog: false };\r\n  }\r\n\r\n  onClick() {\r\n    this.setState({ tog: !this.state.tog });\r\n  }\r\n\r\n  render() {\r\n    return (\r\n      <div>\r\n        <button onClick={this.onClick.bind(this)}>TOGGLE</button>\r\n        {this.state.tog ? <h1>FOUND ME!</h1> : <></>}\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nexport default ForTesting;\r\n',examples:[]},{name:"HelloWorld",description:"This is the Hello World Component.",props:{message:{type:{name:"string"},required:!1,description:"Message to display",defaultValue:{value:'"World"',computed:!1}}},code:'import React from "react";\r\nimport PropTypes from "prop-types";\r\n\r\n/** This is the Hello World Component. */\r\nconst HelloWorld = ({ message }) => {\r\n  return <div>Hello {message} </div>;\r\n};\r\n\r\nHelloWorld.propTypes = {\r\n  /** Message to display */\r\n  message: PropTypes.string\r\n};\r\n\r\nHelloWorld.defaultProps = {\r\n  message: "World"\r\n};\r\n\r\nexport default HelloWorld;\r\n',examples:[{name:"ExampleHelloWorld",description:"Custom Message",code:'import React from "react";\r\nimport HelloWorld from "ps-react/HelloWorld";\r\n\r\n/** Custom Message */\r\nexport default function ExampleHelloWorld() {\r\n  return <HelloWorld message="PluralSight Viewers!" />;\r\n}\r\n'}]},{name:"IxButton",description:"",props:{color:{type:{name:"string"},required:!1,description:"Button Color",defaultValue:{value:'"#0d47a1"',computed:!1}},backgroundColor:{type:{name:"string"},required:!1,description:"Button Background Color",defaultValue:{value:'"transparent"',computed:!1}},iconHoverColor:{type:{name:"string"},required:!1,description:"Icon Hover Color",defaultValue:{value:'"white"',computed:!1}},size:{type:{name:"number"},required:!1,description:"Width and Height",defaultValue:{value:"45",computed:!1}},shadow:{type:{name:"bool"},required:!1,description:"Is there a Shadow?",defaultValue:{value:"true",computed:!1}},handleClick:{type:{name:"func"},required:!1,description:"What to do when Clicking",defaultValue:{value:'() => {\r\n  console.log("Hello World!");\r\n}',computed:!1}},shape:{type:{name:"string"},required:!1,description:"Shape of the Button"},icon:{type:{name:"string"},required:!1,description:"Icon to Display",defaultValue:{value:'"fa fa-paw"',computed:!1}}},code:'import React from "react";\r\nimport PropTypes from "prop-types";\r\nimport { faHome } from "@fortawesome/free-solid-svg-icons";\r\nimport { FontAwesomeIcon } from "react-fontawesome";\r\n\r\nconst sayHello = () => {\r\n  console.log("Hello World!");\r\n};\r\n\r\nclass IxButton extends React.Component {\r\n  constructor(props) {\r\n    super(props);\r\n    this.state = { hover: false };\r\n  }\r\n\r\n  mouseOver() {\r\n    this.setState({ hover: true });\r\n  }\r\n\r\n  mouseOut() {\r\n    this.setState({ hover: false });\r\n  }\r\n\r\n  render() {\r\n    const {\r\n      color,\r\n      backgroundColor,\r\n      iconHoverColor,\r\n      size,\r\n      shadow,\r\n      handleClick,\r\n      shape,\r\n      icon\r\n    } = this.props;\r\n    return (\r\n      <div\r\n        style={{\r\n          backgroundColor: this.state.hover ? color : backgroundColor,\r\n          width: size,\r\n          height: size,\r\n          borderRadius: shape === "circle" ? "50%" : "10%",\r\n          border: `3px solid ${color}`,\r\n          boxShadow:\r\n            shadow && this.state.hover && "2px 2px 4px 0px rgba(0, 0, 0, 0.47)",\r\n          marginLeft: 10,\r\n          marginTop: 5,\r\n          cursor: this.state.hover && "pointer"\r\n        }}\r\n        onMouseOut={() => this.mouseOut()}\r\n        onMouseOver={() => this.mouseOver()}\r\n        onClick={handleClick}\r\n      >\r\n        <div\r\n          style={{\r\n            display: "flex",\r\n            justifyContent: "center",\r\n            height: "100%",\r\n            width: "100%"\r\n          }}\r\n        >\r\n          <i\r\n            className={icon}\r\n            style={{\r\n              color: this.state.hover ? iconHoverColor : color,\r\n              margin: "auto auto",\r\n              float: "none"\r\n            }}\r\n          />\r\n        </div>\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nIxButton.propTypes = {\r\n  /** Button Color */\r\n  color: PropTypes.string,\r\n\r\n  /** Button Background Color */\r\n  backgroundColor: PropTypes.string,\r\n\r\n  /** Icon Hover Color */\r\n  iconHoverColor: PropTypes.string,\r\n\r\n  /** Width and Height */\r\n  size: PropTypes.number,\r\n\r\n  /** Is there a Shadow? */\r\n  shadow: PropTypes.bool,\r\n\r\n  /** What to do when Clicking */\r\n  handleClick: PropTypes.func.isRequired,\r\n\r\n  /** Shape of the Button */\r\n  shape: PropTypes.string,\r\n\r\n  /** Icon to Display */\r\n  icon: PropTypes.string\r\n};\r\n\r\nIxButton.defaultProps = {\r\n  /** Blue is my Favorite Color! */\r\n  color: "#0d47a1",\r\n\r\n  /** Transparent by default */\r\n  backgroundColor: "transparent",\r\n\r\n  /** Icon White on Hover by Default */\r\n  iconHoverColor: "white",\r\n\r\n  /** 25px Circle */\r\n  size: 45,\r\n\r\n  /** Show Shadow by Default */\r\n  shadow: true,\r\n\r\n  /** By Default prints Hello World to Console */\r\n  handleClick: sayHello,\r\n\r\n  /** icon */\r\n  icon: "fa fa-paw"\r\n};\r\n\r\nexport default IxButton;\r\n',examples:[{name:"ExampleButton",description:"",code:'import React from "react";\r\nimport IxButton from "ps-react/IxButton";\r\n\r\nexport default function ExampleButton() {\r\n  const helloExample = () => {\r\n    console.log("Hello Example World!");\r\n  };\r\n  return <IxButton handleClick={helloExample} />;\r\n}\r\n'}]},{name:"IxButtonMulti",description:"",props:{children:{type:{name:"any"},required:!1,description:"The Buttons that Exist in the Dropdown Menu"},shape:{type:{name:"string"},required:!1,description:"The Shape of the Main Button",defaultValue:{value:'"square"',computed:!1}}},code:'import React from "react";\r\nimport PropTypes from "prop-types";\r\nimport IxButton from "../IxButton";\r\n\r\nclass IxButtonMulti extends React.Component {\r\n  constructor(props) {\r\n    super(props);\r\n    this.state = { open: false };\r\n  }\r\n\r\n  onClick() {\r\n    this.setState({ open: !this.state.open });\r\n  }\r\n\r\n  // The button defined here will handle the opening/closing of the dropdown.\r\n  // The buttons within the dropdown will be defined in the example.\r\n  render() {\r\n    const { children, shape, backgroundColor } = this.props;\r\n    return (\r\n      <div style={{ zIndex: this.state.open ? 100 : 10, position: "relative" }}>\r\n        <IxButton\r\n          shape={shape}\r\n          backgroundColor={backgroundColor}\r\n          handleClick={this.onClick.bind(this)}\r\n        />\r\n        <div style={{ position: "absolute" }}>\r\n          {this.state.open && children}\r\n        </div>\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nIxButtonMulti.propTypes = {\r\n  /** The Buttons that Exist in the Dropdown Menu */\r\n  children: PropTypes.any,\r\n\r\n  /** The Shape of the Main Button */\r\n  shape: PropTypes.string\r\n};\r\n\r\nIxButtonMulti.defaultProps = {\r\n  shape: "square"\r\n};\r\n\r\nexport default IxButtonMulti;\r\n',examples:[{name:"ExampleButtonMultiCircle",description:"",code:'import React from "react";\r\nimport IxButton from "ps-react/IxButton";\r\nimport IxButtonMulti from "ps-react/IxButtonMulti";\r\n\r\nexport default function ExampleCirclesMulti() {\r\n  return (\r\n    <IxButtonMulti shape="circle" backgroundColor="white">\r\n      <IxButton shape="circle" backgroundColor="white" />\r\n      <IxButton shape="circle" backgroundColor="white" />\r\n      <IxButton shape="circle" backgroundColor="white" />\r\n    </IxButtonMulti>\r\n  );\r\n}\r\n'},{name:"ExampleIxButtonMulti",description:"",code:'import React from "react";\r\nimport IxButton from "ps-react/IxButton";\r\nimport IxButtonMulti from "ps-react/IxButtonMulti";\r\n\r\nexport default function ExampleCirclesMulti() {\r\n  return (\r\n    <IxButtonMulti>\r\n      <IxButton />\r\n      <IxButton />\r\n      <IxButton />\r\n    </IxButtonMulti>\r\n  );\r\n}\r\n'}]},{name:"Label",description:"Label with Required Field, Display, htmlFor, and block styling",props:{htmlFor:{type:{name:"string"},required:!0,description:"HTML ID for associated input"},label:{type:{name:"string"},required:!0,description:"Label Text"},required:{type:{name:"bool"},required:!1,description:"Display asterisk after label if true"}},code:'import React from "react";\r\nimport PropTypes from "prop-types";\r\n\r\n/** Label with Required Field, Display, htmlFor, and block styling */\r\n\r\nfunction Label({ htmlFor, label, required }) {\r\n  return (\r\n    <label style={{ display: "block" }} htmlFor={htmlFor}>\r\n      {label} {required && <span style={{ color: "red" }}> *</span>}\r\n    </label>\r\n  );\r\n}\r\n\r\nLabel.propTypes = {\r\n  /** HTML ID for associated input */\r\n  htmlFor: PropTypes.string.isRequired,\r\n\r\n  /** Label Text */\r\n  label: PropTypes.string.isRequired,\r\n\r\n  /** Display asterisk after label if true */\r\n  required: PropTypes.bool\r\n};\r\n\r\nLabel.defaultProps = {};\r\n\r\nexport default Label;\r\n',examples:[{name:"ExampleOptional",description:"Optional Label",code:'import React from "react";\r\nimport Label from "ps-react/Label";\r\n\r\n/** Optional Label */\r\nexport default function ExampleOptional() {\r\n  return <Label htmlFor="test" label="test" />;\r\n}\r\n'},{name:"ExampleRequired",description:"Required Label",code:'import React from "react";\r\nimport Label from "ps-react/Label";\r\n\r\n/** Required Label */\r\nexport default function ExampleRequired() {\r\n  return <Label htmlFor="test" label="required" required />;\r\n}\r\n'}]},{name:"PasswordInput",description:"Password Input with Integrated Label, quality tips, and show password toggle",props:{htmlId:{type:{name:"string"},required:!0,description:"Unique HTML ID. Used for tying label to HTML input. Handy hook for automated testing."},name:{type:{name:"string"},required:!0,description:"Input name. Recommend setting this to match object's property so a single change handler can be used by convention."},value:{type:{name:"any"},required:!1,description:"Password value"},label:{type:{name:"string"},required:!1,description:"Input label",defaultValue:{value:'"Password"',computed:!1}},onChange:{type:{name:"func"},required:!0,description:"Function called when password input value changes"},maxLength:{type:{name:"number"},required:!1,description:"Max password length accepted",defaultValue:{value:"50",computed:!1}},placeholder:{type:{name:"string"},required:!1,description:"Placeholder displayed when no password is entered"},showVisibilityToggle:{type:{name:"bool"},required:!1,description:"Set to true to show the toggle for displaying the currently entered password",defaultValue:{value:"false",computed:!1}},quality:{type:{name:"number"},required:!1,description:"Display password quality visually via ProgressBar, accepts a number between 0 and 100"},error:{type:{name:"string"},required:!1,description:"Validation error to display"}},code:'import React from "react";\r\nimport Label from "../Label";\r\nimport TextInput from "../TextInput";\r\nimport PropTypes from "prop-types";\r\nimport EyeIcon from "../EyeIcon";\r\nimport ProgressBar from "../ProgressBar";\r\n\r\n/** Password Input with Integrated Label, quality tips, and show password toggle */\r\nclass PasswordInput extends React.Component {\r\n  constructor(props) {\r\n    super(props);\r\n    this.state = {\r\n      showPassword: false\r\n    };\r\n  }\r\n\r\n  toggleShowPassword = event => {\r\n    this.setState(prevState => {\r\n      return { showPassword: !prevState.showPassword };\r\n    });\r\n    if (event) event.preventDefault();\r\n  };\r\n\r\n  render() {\r\n    const {\r\n      htmlId,\r\n      value,\r\n      label,\r\n      error,\r\n      onChange,\r\n      placeholder,\r\n      maxLength,\r\n      showVisibilityToggle,\r\n      quality,\r\n      ...props\r\n    } = this.props;\r\n    const { showPassword } = this.state;\r\n\r\n    return (\r\n      <TextInput\r\n        htmlId={htmlId}\r\n        label={label}\r\n        placeholder={placeholder}\r\n        type={showPassword ? "text" : "password"}\r\n        onChange={onChange}\r\n        value={value}\r\n        maxLength={maxLength}\r\n        error={error}\r\n        required\r\n        {...props}\r\n      >\r\n        {showVisibilityToggle && (\r\n          <a\r\n            href="#"\r\n            onClick={this.toggleShowPassword}\r\n            style={{ marginLeft: 5 }}\r\n          >\r\n            <EyeIcon />\r\n          </a>\r\n        )}\r\n        {value.length > 0 && quality && (\r\n          <ProgressBar percent={quality} width={130} />\r\n        )}\r\n      </TextInput>\r\n    );\r\n  }\r\n}\r\n\r\nPasswordInput.propTypes = {\r\n  /** Unique HTML ID. Used for tying label to HTML input. Handy hook for automated testing. */\r\n  htmlId: PropTypes.string.isRequired,\r\n\r\n  /** Input name. Recommend setting this to match object\'s property so a single change handler can be used by convention.*/\r\n  name: PropTypes.string.isRequired,\r\n\r\n  /** Password value */\r\n  value: PropTypes.any,\r\n\r\n  /** Input label */\r\n  label: PropTypes.string,\r\n\r\n  /** Function called when password input value changes */\r\n  onChange: PropTypes.func.isRequired,\r\n\r\n  /** Max password length accepted */\r\n  maxLength: PropTypes.number,\r\n\r\n  /** Placeholder displayed when no password is entered */\r\n  placeholder: PropTypes.string,\r\n\r\n  /** Set to true to show the toggle for displaying the currently entered password */\r\n  showVisibilityToggle: PropTypes.bool,\r\n\r\n  /** Display password quality visually via ProgressBar, accepts a number between 0 and 100 */\r\n  quality: PropTypes.number,\r\n\r\n  /** Validation error to display */\r\n  error: PropTypes.string\r\n};\r\n\r\nPasswordInput.defaultProps = {\r\n  maxLength: 50,\r\n  showVisibilityToggle: false,\r\n  label: "Password"\r\n};\r\n\r\nexport default PasswordInput;\r\n',examples:[{name:"ExampleAllFeatures",description:"All features enabled",code:'import React from "react";\r\nimport PasswordInput from "ps-react/PasswordInput";\r\n\r\n/** All features enabled */\r\nclass ExampleAllFeatures extends React.Component {\r\n  constructor(props) {\r\n    super(props);\r\n\r\n    this.state = {\r\n      password: ""\r\n    };\r\n  }\r\n\r\n  getQuality() {\r\n    const length = this.state.password.length;\r\n    return length > 10 ? 100 : length * 10;\r\n  }\r\n\r\n  render() {\r\n    return (\r\n      <div>\r\n        <PasswordInput\r\n          htmlId="password-input-example-all-features"\r\n          name="password"\r\n          onChange={event => this.setState({ password: event.target.value })}\r\n          value={this.state.password}\r\n          minLength={8}\r\n          placeholder="Enter password"\r\n          showVisibilityToggle\r\n          quality={this.getQuality()}\r\n          {...this.props}\r\n        />\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nexport default ExampleAllFeatures;\r\n'}]},{name:"ProgressBar",description:"",props:{percent:{type:{name:"number"},required:!0,description:"Percent of progress completed"},width:{type:{name:"number"},required:!0,description:"Bar Width"},height:{type:{name:"number"},required:!1,description:"Bar Height",defaultValue:{value:"5",computed:!1}}},code:'import React from "react";\r\nimport PropTypes from "prop-types";\r\nimport { border } from "../../styles/ProgressBar-Styles";\r\n\r\nclass ProgressBar extends React.Component {\r\n  getColor = percent => {\r\n    if (this.props.percent === 100) return "green";\r\n    return this.props.percent >= 50 ? "lightgreen" : "red";\r\n  };\r\n\r\n  getWidthAsPercentOfTotalWidth = () => {\r\n    return parseInt(this.props.width * (this.props.percent / 100), 10);\r\n  };\r\n\r\n  render() {\r\n    const { percent, width, height } = this.props;\r\n    return (\r\n      <div style={{ ...border, width: width }}>\r\n        <div\r\n          style={{\r\n            width: this.getWidthAsPercentOfTotalWidth(),\r\n            height,\r\n            backgroundColor: this.getColor(percent)\r\n          }}\r\n        />\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nProgressBar.propTypes = {\r\n  /** Percent of progress completed */\r\n  percent: PropTypes.number.isRequired,\r\n\r\n  /** Bar Width */\r\n  width: PropTypes.number.isRequired,\r\n\r\n  /** Bar Height */\r\n  height: PropTypes.number\r\n};\r\n\r\n// Declare Default Props\r\nProgressBar.defaultProps = {\r\n  height: 5\r\n};\r\n\r\nexport default ProgressBar;\r\n',examples:[{name:"Example100Percent",description:"100% Progress",code:'import React from "react";\r\nimport ProgressBar from "ps-react/ProgressBar";\r\n\r\n/** 100% Progress */\r\nexport default function Example10Percent() {\r\n  return <ProgressBar percent={100} width={150} />;\r\n}\r\n'},{name:"Example10Percent",description:"10% Progress",code:'import React from "react";\r\nimport ProgressBar from "ps-react/ProgressBar";\r\n\r\n/** 10% Progress */\r\nexport default function Example10Percent() {\r\n  return <ProgressBar percent={10} width={150} />;\r\n}\r\n'},{name:"Example50Percent",description:"50% Progress",code:'import React from "react";\r\nimport ProgressBar from "ps-react/ProgressBar";\r\n\r\n/** 50% Progress */\r\nexport default function Example10Percent() {\r\n  return <ProgressBar percent={50} width={150} />;\r\n}\r\n'}]},{name:"RegistrationForm",description:"Registration form with Built-In Validation",props:{confirmationMessage:{type:{name:"string"},required:!1,description:"Message displayed on success",defaultValue:{value:'"Thanks for registering!"',computed:!1}},onSubmit:{type:{name:"func"},required:!0,description:"Called when form is submitted"},minPasswordLength:{type:{name:"number"},required:!1,description:"Minimum Password Length",defaultValue:{value:"8",computed:!1}}},code:'import React from "react";\r\nimport PropTypes from "prop-types";\r\nimport TextInput from "../TextInput";\r\nimport PasswordInput from "../PasswordInput";\r\n\r\n/** Registration form with Built-In Validation */\r\nclass RegistrationForm extends React.Component {\r\n  constructor(props) {\r\n    super(props);\r\n\r\n    this.state = {\r\n      user: {\r\n        email: "",\r\n        password: ""\r\n      },\r\n      errors: {},\r\n      submitted: false\r\n    };\r\n  }\r\n\r\n  onChange = event => {\r\n    const user = this.state.user;\r\n    user[event.target.name] = event.target.value;\r\n    this.ListeningStateChangedEvent({ user });\r\n  };\r\n\r\n  /** Returns a number from 0 to 100 that represents password quality\r\n   *  For simplicity, just returning % of min length entered.\r\n   *  Enhance with checks for number, special char, unique chars, etc.\r\n   */\r\n  passwordQuality(password) {\r\n    if (!password) return null;\r\n    if (password.length >= this.props.minPasswordLength) return 100;\r\n    const percentOfMinLength = parseInt(\r\n      (password.length / this.props.minPasswordLength) * 100,\r\n      10\r\n    );\r\n    return percentOfMinLength;\r\n  }\r\n\r\n  validate({ email, password }) {\r\n    const errors = {};\r\n    const { minPasswordLength } = this.props;\r\n\r\n    if (!email) errors.email = "Email required.";\r\n    if (password.length < minPasswordLength)\r\n      errors.password = `Password must be at least ${minPasswordLength} characters.`;\r\n\r\n    this.setState({ errors });\r\n    const formIsValid = Object.getOwnPropertyNames(errors).length === 0;\r\n    return formIsValid;\r\n  }\r\n\r\n  onSubmit = () => {\r\n    const { user } = this.state;\r\n    const formIsValid = this.validate(user);\r\n    if (formIsValid) {\r\n      this.props.onSubmit(user);\r\n      this.setState({ submitted: true });\r\n    }\r\n  };\r\n\r\n  render() {\r\n    const { errors, submitted } = this.state;\r\n    const { email, password } = this.state.user;\r\n\r\n    return submitted ? (\r\n      <h2>{this.props.confirmationMessage}</h2>\r\n    ) : (\r\n      <div>\r\n        <TextInput\r\n          htmlId="registration-form-email"\r\n          name="email"\r\n          onChange={this.onChange}\r\n          label="Email"\r\n          value={email}\r\n          error={errors.email}\r\n          required\r\n        />\r\n\r\n        <PasswordInput\r\n          htmlId="registration-form-password"\r\n          name="password"\r\n          value={password}\r\n          onChange={this.onChange}\r\n          quality={this.passwordQuality(password)}\r\n          showVisibilityToggle\r\n          maxLength={50}\r\n          error={errors.password}\r\n        />\r\n\r\n        <input type="submit" value="Register" onClick={this.onSubmit} />\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nRegistrationForm.propTypes = {\r\n  /** Message displayed on success */\r\n  confirmationMessage: PropTypes.string,\r\n\r\n  /** Called when form is submitted */\r\n  onSubmit: PropTypes.func.isRequired,\r\n\r\n  /** Minimum Password Length */\r\n  minPasswordLength: PropTypes.number\r\n};\r\n\r\nRegistrationForm.defaultProps = {\r\n  confirmationMessage: "Thanks for registering!",\r\n  minPasswordLength: 8\r\n};\r\n\r\nexport default RegistrationForm;\r\n',examples:[{name:"ExampleRegistrationForm",description:"",code:'import React from "react";\r\nimport RegistrationForm from "ps-react/RegistrationForm";\r\n\r\nexport default class ExampleRegistrationForm extends React.Component {\r\n  onSubmit = user => {\r\n    console.log(user);\r\n  };\r\n\r\n  render() {\r\n    return <RegistrationForm onSubmit={this.onSubmit} />;\r\n  }\r\n}\r\n'}]},{name:"TextInput",description:"Text Input with integrated label to enforce consistency in layout, error display, label placement",props:{htmlId:{type:{name:"string"},required:!0,description:"Unique HTML ID. USed for tying label to HTML input. Handy Hook for automated testing."},name:{type:{name:"string"},required:!0,description:"Input Name. Recommend setting this to match object's property so a single change handler can be used"},label:{type:{name:"string"},required:!0,description:"Input Label"},type:{type:{name:"enum",value:[{value:'"text"',computed:!1},{value:'"number"',computed:!1},{value:'"password"',computed:!1}]},required:!1,description:"Input Type",defaultValue:{value:'"text"',computed:!1}},required:{type:{name:"bool"},required:!1,description:"Mark label with asterisk if required",defaultValue:{value:"false",computed:!1}},onChange:{type:{name:"func"},required:!0,description:"Function to call onChange"},placeholder:{type:{name:"string"},required:!1,description:"Placeholder to display when empty"},value:{type:{name:"any"},required:!1,description:"Value"},error:{type:{name:"string"},required:!1,description:"String to display when error occues"},children:{type:{name:"node"},required:!1,description:"Child component to display next to the input"}},code:'import React from "react";\r\nimport PropTypes from "prop-types";\r\nimport Label from "../Label";\r\n\r\n/** Text Input with integrated label to enforce consistency in layout, error display, label placement */\r\nfunction TextInput({\r\n  htmlId,\r\n  name,\r\n  label,\r\n  type = "text",\r\n  required = false,\r\n  onChange,\r\n  placeholder,\r\n  value,\r\n  error,\r\n  children,\r\n  ...props\r\n}) {\r\n  return (\r\n    <div style={{ marginBottom: 16 }}>\r\n      <Label htmlFor={htmlId} label={label} required={required} />\r\n      <input\r\n        id={htmlId}\r\n        type={type}\r\n        name={name}\r\n        placeholder={placeholder}\r\n        value={value}\r\n        onChange={onChange}\r\n        style={error && { border: "solid 1px red" }}\r\n        {...props}\r\n      />\r\n      {children}\r\n      {error && (\r\n        <div className="error" style={{ color: "red" }}>\r\n          {error}\r\n        </div>\r\n      )}\r\n    </div>\r\n  );\r\n}\r\n\r\nTextInput.propTypes = {\r\n  /** Unique HTML ID. USed for tying label to HTML input. Handy Hook for automated testing. */\r\n  htmlId: PropTypes.string.isRequired,\r\n\r\n  /** Input Name. Recommend setting this to match object\'s property so a single change handler can be used */\r\n  name: PropTypes.string.isRequired,\r\n\r\n  /** Input Label */\r\n  label: PropTypes.string.isRequired,\r\n\r\n  /** Input Type */\r\n  type: PropTypes.oneOf(["text", "number", "password"]),\r\n\r\n  /** Mark label with asterisk if required */\r\n  required: PropTypes.bool,\r\n\r\n  /** Function to call onChange */\r\n  onChange: PropTypes.func.isRequired,\r\n\r\n  /** Placeholder to display when empty */\r\n  placeholder: PropTypes.string,\r\n\r\n  /** Value */\r\n  value: PropTypes.any,\r\n\r\n  /** String to display when error occues */\r\n  error: PropTypes.string,\r\n\r\n  /** Child component to display next to the input */\r\n  children: PropTypes.node\r\n};\r\n\r\nexport default TextInput;\r\n',examples:[{name:"ExampleError",description:"Required TextBox with Error",code:'import React from "react";\r\nimport TextInput from "ps-react/TextInput";\r\n\r\n/** Required TextBox with Error */\r\nexport default class ExampleError extends React.Component {\r\n  render() {\r\n    return (\r\n      <TextInput\r\n        htmlId="example-required-error"\r\n        value="wrong"\r\n        type="password"\r\n        label="Password"\r\n        name="passwordInput"\r\n        onChange={() => {}}\r\n        onSubmit={() => {}}\r\n        required\r\n        error="Incorrect Password"\r\n      />\r\n    );\r\n  }\r\n}\r\n'},{name:"ExampleOptional",description:"Optional TextBox",code:'import React from "react";\r\nimport TextInput from "ps-react/TextInput";\r\n\r\n/** Optional TextBox */\r\nexport default class ExampleOptional extends React.Component {\r\n  render() {\r\n    return (\r\n      <TextInput\r\n        htmlId="example-optional"\r\n        label="First Name"\r\n        name="firstname"\r\n        onChange={() => {}}\r\n        onSubmit={() => {}}\r\n      />\r\n    );\r\n  }\r\n}\r\n'}]},{name:"TextInputBEM",description:"Text Input with integrated label to enforce consistency in layout, error display, label placement",props:{htmlId:{type:{name:"string"},required:!0,description:"Unique HTML ID. USed for tying label to HTML input. Handy Hook for automated testing."},name:{type:{name:"string"},required:!0,description:"Input Name. Recommend setting this to match object's property so a single change handler can be used"},label:{type:{name:"string"},required:!0,description:"Input Label"},type:{type:{name:"enum",value:[{value:'"text"',computed:!1},{value:'"number"',computed:!1},{value:'"password"',computed:!1}]},required:!1,description:"Input Type",defaultValue:{value:'"text"',computed:!1}},required:{type:{name:"bool"},required:!1,description:"Mark label with asterisk if required",defaultValue:{value:"false",computed:!1}},onChange:{type:{name:"func"},required:!0,description:"Function to call onChange"},placeholder:{type:{name:"string"},required:!1,description:"Placeholder to display when empty"},value:{type:{name:"any"},required:!1,description:"Value"},error:{type:{name:"string"},required:!1,description:"String to display when error occues"},children:{type:{name:"node"},required:!1,description:"Child component to display next to the input"}},code:'import React from "react";\r\nimport PropTypes from "prop-types";\r\nimport Label from "../Label";\r\n\r\n/** Text Input with integrated label to enforce consistency in layout, error display, label placement */\r\nfunction TextInput({\r\n  htmlId,\r\n  name,\r\n  label,\r\n  type = "text",\r\n  required = false,\r\n  onChange,\r\n  placeholder,\r\n  value,\r\n  error,\r\n  children,\r\n  ...props\r\n}) {\r\n  return (\r\n    <div className="textinput">\r\n      <Label htmlFor={htmlId} label={label} required={required} />\r\n      <input\r\n        id={htmlId}\r\n        type={type}\r\n        name={name}\r\n        placeholder={placeholder}\r\n        value={value}\r\n        onChange={onChange}\r\n        className={error && "textinput__input--state-error"}\r\n        {...props}\r\n      />\r\n      {children}\r\n      {error && <div className="textinput__error">{error}</div>}\r\n    </div>\r\n  );\r\n}\r\n\r\nTextInput.propTypes = {\r\n  /** Unique HTML ID. USed for tying label to HTML input. Handy Hook for automated testing. */\r\n  htmlId: PropTypes.string.isRequired,\r\n\r\n  /** Input Name. Recommend setting this to match object\'s property so a single change handler can be used */\r\n  name: PropTypes.string.isRequired,\r\n\r\n  /** Input Label */\r\n  label: PropTypes.string.isRequired,\r\n\r\n  /** Input Type */\r\n  type: PropTypes.oneOf(["text", "number", "password"]),\r\n\r\n  /** Mark label with asterisk if required */\r\n  required: PropTypes.bool,\r\n\r\n  /** Function to call onChange */\r\n  onChange: PropTypes.func.isRequired,\r\n\r\n  /** Placeholder to display when empty */\r\n  placeholder: PropTypes.string,\r\n\r\n  /** Value */\r\n  value: PropTypes.any,\r\n\r\n  /** String to display when error occues */\r\n  error: PropTypes.string,\r\n\r\n  /** Child component to display next to the input */\r\n  children: PropTypes.node\r\n};\r\n\r\nexport default TextInput;\r\n',examples:[{name:"ExampleError",description:"Required TextBox with Error",code:'import React from "react";\r\nimport TextInputBEM from "ps-react/TextInputBEM";\r\n\r\n/** Required TextBox with Error */\r\nexport default class ExampleError extends React.Component {\r\n  render() {\r\n    return (\r\n      <TextInputBEM\r\n        htmlId="example-required-error"\r\n        value="wrong"\r\n        type="password"\r\n        label="Password"\r\n        name="passwordInput"\r\n        onChange={() => {}}\r\n        required\r\n        error="Incorrect Password"\r\n      />\r\n    );\r\n  }\r\n}\r\n'}]},{name:"TextInputCSSModules",description:"Text Input with integrated label to enforce consistency in layout, error display, label placement",props:{htmlId:{type:{name:"string"},required:!0,description:"Unique HTML ID. USed for tying label to HTML input. Handy Hook for automated testing."},name:{type:{name:"string"},required:!0,description:"Input Name. Recommend setting this to match object's property so a single change handler can be used"},label:{type:{name:"string"},required:!0,description:"Input Label"},type:{type:{name:"enum",value:[{value:'"text"',computed:!1},{value:'"number"',computed:!1},{value:'"password"',computed:!1}]},required:!1,description:"Input Type",defaultValue:{value:'"text"',computed:!1}},required:{type:{name:"bool"},required:!1,description:"Mark label with asterisk if required",defaultValue:{value:"false",computed:!1}},onChange:{type:{name:"func"},required:!0,description:"Function to call onChange"},placeholder:{type:{name:"string"},required:!1,description:"Placeholder to display when empty"},value:{type:{name:"any"},required:!1,description:"Value"},error:{type:{name:"string"},required:!1,description:"String to display when error occues"},children:{type:{name:"node"},required:!1,description:"Child component to display next to the input"}},code:'import React from "react";\r\nimport PropTypes from "prop-types";\r\nimport Label from "../Label";\r\nimport styles from "./textInput.css";\r\n\r\n/** Text Input with integrated label to enforce consistency in layout, error display, label placement */\r\nfunction TextInput({\r\n  htmlId,\r\n  name,\r\n  label,\r\n  type = "text",\r\n  required = false,\r\n  onChange,\r\n  placeholder,\r\n  value,\r\n  error,\r\n  children,\r\n  ...props\r\n}) {\r\n  return (\r\n    <div className={styles.fieldset}>\r\n      <Label htmlFor={htmlId} label={label} required={required} />\r\n      <input\r\n        id={htmlId}\r\n        type={type}\r\n        name={name}\r\n        placeholder={placeholder}\r\n        value={value}\r\n        onChange={onChange}\r\n        className={error && styles.inputError}\r\n        {...props}\r\n      />\r\n      {children}\r\n      {error && <div className={styles.error}>{error}</div>}\r\n    </div>\r\n  );\r\n}\r\n\r\nTextInput.propTypes = {\r\n  /** Unique HTML ID. USed for tying label to HTML input. Handy Hook for automated testing. */\r\n  htmlId: PropTypes.string.isRequired,\r\n\r\n  /** Input Name. Recommend setting this to match object\'s property so a single change handler can be used */\r\n  name: PropTypes.string.isRequired,\r\n\r\n  /** Input Label */\r\n  label: PropTypes.string.isRequired,\r\n\r\n  /** Input Type */\r\n  type: PropTypes.oneOf(["text", "number", "password"]),\r\n\r\n  /** Mark label with asterisk if required */\r\n  required: PropTypes.bool,\r\n\r\n  /** Function to call onChange */\r\n  onChange: PropTypes.func.isRequired,\r\n\r\n  /** Placeholder to display when empty */\r\n  placeholder: PropTypes.string,\r\n\r\n  /** Value */\r\n  value: PropTypes.any,\r\n\r\n  /** String to display when error occues */\r\n  error: PropTypes.string,\r\n\r\n  /** Child component to display next to the input */\r\n  children: PropTypes.node\r\n};\r\n\r\nexport default TextInput;\r\n',examples:[{name:"ExampleError",description:"Required TextBox with Error",code:'import React from "react";\r\nimport TextInputCSSModules from "ps-react/TextInputCSSModules";\r\n\r\n/** Required TextBox with Error */\r\nexport default class ExampleError extends React.Component {\r\n  render() {\r\n    return (\r\n      <TextInputCSSModules\r\n        htmlId="example-required-error"\r\n        value="wrong"\r\n        type="password"\r\n        label="Password"\r\n        name="passwordInput"\r\n        onChange={() => {}}\r\n        required\r\n        error="Incorrect Password"\r\n      />\r\n    );\r\n  }\r\n}\r\n'}]},{name:"TextInputStyledComponents",description:"Text Input with integrated label to enforce consistency in layout, error display, label placement",props:{htmlId:{type:{name:"string"},required:!0,description:"Unique HTML ID. USed for tying label to HTML input. Handy Hook for automated testing."},name:{type:{name:"string"},required:!0,description:"Input Name. Recommend setting this to match object's property so a single change handler can be used"},label:{type:{name:"string"},required:!0,description:"Input Label"},type:{type:{name:"enum",value:[{value:'"text"',computed:!1},{value:'"number"',computed:!1},{value:'"password"',computed:!1}]},required:!1,description:"Input Type",defaultValue:{value:'"text"',computed:!1}},required:{type:{name:"bool"},required:!1,description:"Mark label with asterisk if required",defaultValue:{value:"false",computed:!1}},onChange:{type:{name:"func"},required:!0,description:"Function to call onChange"},placeholder:{type:{name:"string"},required:!1,description:"Placeholder to display when empty"},value:{type:{name:"any"},required:!1,description:"Value"},error:{type:{name:"string"},required:!1,description:"String to display when error occues"},children:{type:{name:"node"},required:!1,description:"Child component to display next to the input"}},code:'import React from "react";\r\nimport PropTypes from "prop-types";\r\nimport Label from "../Label";\r\nimport styled from "styled-components";\r\n\r\n/** Text Input with integrated label to enforce consistency in layout, error display, label placement */\r\nfunction TextInput({\r\n  htmlId,\r\n  name,\r\n  label,\r\n  type = "text",\r\n  required = false,\r\n  onChange,\r\n  placeholder,\r\n  value,\r\n  error,\r\n  children,\r\n  ...props\r\n}) {\r\n  const Error = styled.div`\r\n    color: red;\r\n  `;\r\n\r\n  const Input = styled.input`\r\n    border: ${error && "solid 1px red"};\r\n  `;\r\n\r\n  const Fieldset = styled.div`\r\n    margin-bottom: 16px;\r\n  `;\r\n\r\n  return (\r\n    <Fieldset>\r\n      <Label htmlFor={htmlId} label={label} required={required} />\r\n      <Input\r\n        id={htmlId}\r\n        type={type}\r\n        name={name}\r\n        placeholder={placeholder}\r\n        value={value}\r\n        onChange={onChange}\r\n        {...props}\r\n      />\r\n      {children}\r\n      {error && <Error>{error}</Error>}\r\n    </Fieldset>\r\n  );\r\n}\r\n\r\nTextInput.propTypes = {\r\n  /** Unique HTML ID. USed for tying label to HTML input. Handy Hook for automated testing. */\r\n  htmlId: PropTypes.string.isRequired,\r\n\r\n  /** Input Name. Recommend setting this to match object\'s property so a single change handler can be used */\r\n  name: PropTypes.string.isRequired,\r\n\r\n  /** Input Label */\r\n  label: PropTypes.string.isRequired,\r\n\r\n  /** Input Type */\r\n  type: PropTypes.oneOf(["text", "number", "password"]),\r\n\r\n  /** Mark label with asterisk if required */\r\n  required: PropTypes.bool,\r\n\r\n  /** Function to call onChange */\r\n  onChange: PropTypes.func.isRequired,\r\n\r\n  /** Placeholder to display when empty */\r\n  placeholder: PropTypes.string,\r\n\r\n  /** Value */\r\n  value: PropTypes.any,\r\n\r\n  /** String to display when error occues */\r\n  error: PropTypes.string,\r\n\r\n  /** Child component to display next to the input */\r\n  children: PropTypes.node\r\n};\r\n\r\nexport default TextInput;\r\n',examples:[{name:"ExampleError",description:"Required TextBox with Error",code:'import React from "react";\r\nimport TextInputStyledComponents from "ps-react/TextInputStyledComponents";\r\n\r\n/** Required TextBox with Error */\r\nexport default class ExampleError extends React.Component {\r\n  render() {\r\n    return (\r\n      <TextInputStyledComponents\r\n        htmlId="example-required-error"\r\n        value="wrong"\r\n        type="password"\r\n        label="Password"\r\n        name="passwordInput"\r\n        onChange={() => {}}\r\n        required\r\n        error="Incorrect Password"\r\n      />\r\n    );\r\n  }\r\n}\r\n'}]}]},,,,,,,function(e,r,n){"use strict";n.r(r),n.d(r,"default",function(){return i});var t=n(0),a=n.n(t),o=n(11);function i(){return a.a.createElement(o.a,{name:"partname",onChange:function(e){this.setState({value:e.target.value})},onSubmit:function(e){this.setState({isEntered:!1}),this.setState({isHover:!1}),e.preventDefault()}})}},,function(e,r,n){"use strict";n.r(r),n.d(r,"default",function(){return s});var t=n(0),a=n.n(t),o=n(15),i=n(11);function s(){function e(e){this.setState({isEntered:!1}),this.setState({isHover:!1}),e.preventDefault()}function r(e){this.setState({value:e.target.value})}return a.a.createElement(o.a,{duration:500,startHeight:"auto",endHeight:"auto"},a.a.createElement("div",{style:{height:"auto",display:"flex",flexDirection:"row"}},a.a.createElement("div",{style:{display:"flex",alignItems:"center"}},a.a.createElement("i",{className:"fa fa-cubes fa-3x",style:{color:"#0d47a1"}})),a.a.createElement("div",{style:{display:"inline-block",marginLeft:"10px",marginTop:"0px"}},a.a.createElement(i.a,{leftMargin:"10px",topMargin:"10px",color:"white",name:"partname",onChange:r,onSubmit:e,value:"BLACK STEEL MULTI TOOL"}),a.a.createElement("div",null,a.a.createElement(i.a,{bottomMargin:"10px",topMargin:"5px",leftMargin:"10px",color:"white",name:"partnum",onChange:r,onSubmit:e,value:"PRT-2322"}),a.a.createElement(i.a,{name:"partrev",onChange:r,onSubmit:e,bottomMargin:"10px",topMargin:"5px",leftMargin:"50px",value:"B3",color:"white"})))))}},function(e,r,n){"use strict";n.r(r),n.d(r,"default",function(){return i});var t=n(0),a=n.n(t),o=n(13);function i(){return a.a.createElement(o.a,null)}},function(e,r,n){"use strict";n.r(r),n.d(r,"default",function(){return i});var t=n(0),a=n.n(t),o=n(6);function i(){return a.a.createElement(o.a,{handleClick:function(){console.log("Hello Example World!")}})}},function(e,r,n){"use strict";n.r(r),n.d(r,"default",function(){return s});var t=n(0),a=n.n(t),o=n(6),i=n(14);function s(){return a.a.createElement(i.a,{shape:"circle",backgroundColor:"white"},a.a.createElement(o.a,{shape:"circle",backgroundColor:"white"}),a.a.createElement(o.a,{shape:"circle",backgroundColor:"white"}),a.a.createElement(o.a,{shape:"circle",backgroundColor:"white"}))}},function(e,r,n){"use strict";n.r(r),n.d(r,"default",function(){return s});var t=n(0),a=n.n(t),o=n(6),i=n(14);function s(){return a.a.createElement(i.a,null,a.a.createElement(o.a,null),a.a.createElement(o.a,null),a.a.createElement(o.a,null))}},function(e,r,n){"use strict";n.r(r),n.d(r,"default",function(){return i});var t=n(0),a=n.n(t),o=n(7);function i(){return a.a.createElement(o.a,{htmlFor:"test",label:"test"})}},function(e,r,n){"use strict";n.r(r),n.d(r,"default",function(){return i});var t=n(0),a=n.n(t),o=n(7);function i(){return a.a.createElement(o.a,{htmlFor:"test",label:"required",required:!0})}},function(e,r,n){"use strict";n.r(r);var t=n(1),a=n(2),o=n(4),i=n(3),s=n(5),l=n(0),p=n.n(l),u=n(17),c=function(e){function r(e){var n;return Object(t.a)(this,r),(n=Object(o.a)(this,Object(i.a)(r).call(this,e))).state={password:""},n}return Object(s.a)(r,e),Object(a.a)(r,[{key:"getQuality",value:function(){var e=this.state.password.length;return e>10?100:10*e}},{key:"render",value:function(){var e=this;return p.a.createElement("div",null,p.a.createElement(u.a,Object.assign({htmlId:"password-input-example-all-features",name:"password",onChange:function(r){return e.setState({password:r.target.value})},value:this.state.password,minLength:8,placeholder:"Enter password",showVisibilityToggle:!0,quality:this.getQuality()},this.props)))}}]),r}(p.a.Component);r.default=c},function(e,r,n){"use strict";n.r(r),n.d(r,"default",function(){return i});var t=n(0),a=n.n(t),o=n(9);function i(){return a.a.createElement(o.a,{percent:100,width:150})}},function(e,r,n){"use strict";n.r(r),n.d(r,"default",function(){return i});var t=n(0),a=n.n(t),o=n(9);function i(){return a.a.createElement(o.a,{percent:10,width:150})}},function(e,r,n){"use strict";n.r(r),n.d(r,"default",function(){return i});var t=n(0),a=n.n(t),o=n(9);function i(){return a.a.createElement(o.a,{percent:50,width:150})}},function(e,r,n){"use strict";n.r(r),n.d(r,"default",function(){return c});var t=n(1),a=n(2),o=n(4),i=n(3),s=n(5),l=n(0),p=n.n(l),u=n(10),c=function(e){function r(){return Object(t.a)(this,r),Object(o.a)(this,Object(i.a)(r).apply(this,arguments))}return Object(s.a)(r,e),Object(a.a)(r,[{key:"render",value:function(){return p.a.createElement(u.a,{htmlId:"example-required-error",value:"wrong",type:"password",label:"Password",name:"passwordInput",onChange:function(){},onSubmit:function(){},required:!0,error:"Incorrect Password"})}}]),r}(p.a.Component)},function(e,r,n){"use strict";n.r(r),n.d(r,"default",function(){return c});var t=n(1),a=n(2),o=n(4),i=n(3),s=n(5),l=n(0),p=n.n(l),u=n(10),c=function(e){function r(){return Object(t.a)(this,r),Object(o.a)(this,Object(i.a)(r).apply(this,arguments))}return Object(s.a)(r,e),Object(a.a)(r,[{key:"render",value:function(){return p.a.createElement(u.a,{htmlId:"example-optional",label:"First Name",name:"firstname",onChange:function(){},onSubmit:function(){}})}}]),r}(p.a.Component)},function(e,r,n){"use strict";n.r(r);var t=n(1),a=n(2),o=n(4),i=n(3),s=n(5),l=n(0),p=n.n(l),u=n(16),c={left:"50%",transform:"translate(-50%,0%)"},d={left:"50%",transform:"translate(-50%,0%)"},m={top:"0%",transform:"translate(-100%, 0%)"},h={top:"50%",transform:"translate(50%, -50%)"};function g(e){switch(e){case"left":return m;case"right":return h;case"top":return d;case"bottom":return c;default:return h}}var f=function(e){function r(e){return Object(t.a)(this,r),Object(o.a)(this,Object(i.a)(r).call(this,e))}return Object(s.a)(r,e),Object(a.a)(r,[{key:"render",value:function(){var e=this.props,r=e.color,n=e.tip,t=e.direction;return p.a.createElement("div",{id:"tooltip",style:Object(u.a)({display:"inline-block",backgroundColor:r,padding:"5px 5px 5px 5px",color:"white",fontWeight:"bold",fontSize:10,borderRadius:"5px",position:"relative",zIndex:100},g(t))},n)}}]),r}(p.a.Component);f.defaultProps={color:"#445160",tip:"TOOLTIP",direction:"right"};var y=f,x=n(6);n.d(r,"default",function(){return b});var b=function(e){function r(){return Object(t.a)(this,r),Object(o.a)(this,Object(i.a)(r).apply(this,arguments))}return Object(s.a)(r,e),Object(a.a)(r,[{key:"render",value:function(){return p.a.createElement(p.a.Fragment,null,p.a.createElement("div",{style:{display:"inline-block"}},p.a.createElement(x.a,null),p.a.createElement(y,{direction:"left"})),p.a.createElement("div",{style:{display:"inline-block"}},p.a.createElement(x.a,null),p.a.createElement(y,{direction:"right"})),p.a.createElement("div",{style:{display:"inline-block"}},p.a.createElement(y,{direction:"up"}),p.a.createElement(x.a,null)),p.a.createElement("div",{style:{display:"inline-block"}},p.a.createElement(x.a,null),p.a.createElement(y,{direction:"down"})))}}]),r}(p.a.Component)},function(e,r,n){"use strict";n.r(r);var t=n(1),a=n(2),o=n(4),i=n(3),s=n(5),l=n(0),p=n.n(l),u=n(19),c=n(8),d=n(7),m=n(20);function h(){var e=Object(u.a)(["\n    margin-bottom: 16px;\n  "]);return h=function(){return e},e}function g(){var e=Object(u.a)(["\n    border: ",";\n  "]);return g=function(){return e},e}function f(){var e=Object(u.a)(["\n    color: red;\n  "]);return f=function(){return e},e}var y=function(e){var r=e.htmlId,n=e.name,t=e.label,a=e.type,o=void 0===a?"text":a,i=e.required,s=void 0!==i&&i,l=e.onChange,u=e.placeholder,y=e.value,x=e.error,b=e.children,v=Object(c.a)(e,["htmlId","name","label","type","required","onChange","placeholder","value","error","children"]),w=m.a.div(f()),E=m.a.input(g(),x&&"solid 1px red"),T=m.a.div(h());return p.a.createElement(T,null,p.a.createElement(d.a,{htmlFor:r,label:t,required:s}),p.a.createElement(E,Object.assign({id:r,type:o,name:n,placeholder:u,value:y,onChange:l},v)),b,x&&p.a.createElement(w,null,x))};n.d(r,"default",function(){return x});var x=function(e){function r(){return Object(t.a)(this,r),Object(o.a)(this,Object(i.a)(r).apply(this,arguments))}return Object(s.a)(r,e),Object(a.a)(r,[{key:"render",value:function(){return p.a.createElement(y,{htmlId:"example-required-error",value:"wrong",type:"password",label:"Password",name:"passwordInput",onChange:function(){},required:!0,error:"Incorrect Password"})}}]),r}(p.a.Component)},function(e,r,n){"use strict";n.r(r);var t=n(1),a=n(2),o=n(4),i=n(3),s=n(5),l=n(0),p=n.n(l),u=n(8),c=n(7),d=n(18),m=n.n(d);var h=function(e){var r=e.htmlId,n=e.name,t=e.label,a=e.type,o=void 0===a?"text":a,i=e.required,s=void 0!==i&&i,l=e.onChange,d=e.placeholder,h=e.value,g=e.error,f=e.children,y=Object(u.a)(e,["htmlId","name","label","type","required","onChange","placeholder","value","error","children"]);return p.a.createElement("div",{className:m.a.fieldset},p.a.createElement(c.a,{htmlFor:r,label:t,required:s}),p.a.createElement("input",Object.assign({id:r,type:o,name:n,placeholder:d,value:h,onChange:l,className:g&&m.a.inputError},y)),f,g&&p.a.createElement("div",{className:m.a.error},g))};n.d(r,"default",function(){return g});var g=function(e){function r(){return Object(t.a)(this,r),Object(o.a)(this,Object(i.a)(r).apply(this,arguments))}return Object(s.a)(r,e),Object(a.a)(r,[{key:"render",value:function(){return p.a.createElement(h,{htmlId:"example-required-error",value:"wrong",type:"password",label:"Password",name:"passwordInput",onChange:function(){},required:!0,error:"Incorrect Password"})}}]),r}(p.a.Component)},function(e,r,n){"use strict";n.r(r);var t=n(0),a=n.n(t),o=n(15),i=n(1),s=n(2),l=n(4),p=n(3),u=n(5);a.a.Component;function c(){return a.a.createElement(a.a.Fragment,null,a.a.createElement(o.a,{duration:500,startHeight:90,endHeight:150},a.a.createElement("div",{style:{height:"auto"}},a.a.createElement("i",{className:"fa fa-cubes fa-3x",style:{margin:"auto auto",float:"none",color:"#0d47a1",display:"inline-block",height:"100%"}}),a.a.createElement("div",{style:{display:"inline-block",marginLeft:"10px",marginTop:"0px"}},a.a.createElement("div",null,a.a.createElement("h1",{style:{display:"inline-block",marginBottom:"0px",color:"white"}},"PART NAME")),a.a.createElement("div",null,a.a.createElement("h2",{style:{display:"inline-block",marginTop:"0px",color:"white"}},"PART NUMBER"),a.a.createElement("h2",{style:{display:"inline-block",marginLeft:"20px",marginTop:"0px",color:"white"}},"PART REVISION"))),a.a.createElement("div",null))))}n.d(r,"default",function(){return c})},function(e,r,n){"use strict";n.r(r);var t=n(1),a=n(2),o=n(4),i=n(3),s=n(5),l=n(0),p=n.n(l),u=(n(68),n(8)),c=n(7);var d=function(e){var r=e.htmlId,n=e.name,t=e.label,a=e.type,o=void 0===a?"text":a,i=e.required,s=void 0!==i&&i,l=e.onChange,d=e.placeholder,m=e.value,h=e.error,g=e.children,f=Object(u.a)(e,["htmlId","name","label","type","required","onChange","placeholder","value","error","children"]);return p.a.createElement("div",{className:"textinput"},p.a.createElement(c.a,{htmlFor:r,label:t,required:s}),p.a.createElement("input",Object.assign({id:r,type:o,name:n,placeholder:d,value:m,onChange:l,className:h&&"textinput__input--state-error"},f)),g,h&&p.a.createElement("div",{className:"textinput__error"},h))};n.d(r,"default",function(){return m});var m=function(e){function r(){return Object(t.a)(this,r),Object(o.a)(this,Object(i.a)(r).apply(this,arguments))}return Object(s.a)(r,e),Object(a.a)(r,[{key:"render",value:function(){return p.a.createElement(d,{htmlId:"example-required-error",value:"wrong",type:"password",label:"Password",name:"passwordInput",onChange:function(){},required:!0,error:"Incorrect Password"})}}]),r}(p.a.Component)},function(e,r,n){"use strict";n.r(r);var t=n(1),a=n(2),o=n(4),i=n(3),s=n(5),l=n(0),p=n.n(l),u=n(10),c=n(17),d=function(e){function r(e){var n;return Object(t.a)(this,r),(n=Object(o.a)(this,Object(i.a)(r).call(this,e))).onChange=function(e){var r=n.state.user;r[e.target.name]=e.target.value,n.ListeningStateChangedEvent({user:r})},n.onSubmit=function(){var e=n.state.user;n.validate(e)&&(n.props.onSubmit(e),n.setState({submitted:!0}))},n.state={user:{email:"",password:""},errors:{},submitted:!1},n}return Object(s.a)(r,e),Object(a.a)(r,[{key:"passwordQuality",value:function(e){return e?e.length>=this.props.minPasswordLength?100:parseInt(e.length/this.props.minPasswordLength*100,10):null}},{key:"validate",value:function(e){var r=e.email,n=e.password,t={},a=this.props.minPasswordLength;return r||(t.email="Email required."),n.length<a&&(t.password="Password must be at least ".concat(a," characters.")),this.setState({errors:t}),0===Object.getOwnPropertyNames(t).length}},{key:"render",value:function(){var e=this.state,r=e.errors,n=e.submitted,t=this.state.user,a=t.email,o=t.password;return n?p.a.createElement("h2",null,this.props.confirmationMessage):p.a.createElement("div",null,p.a.createElement(u.a,{htmlId:"registration-form-email",name:"email",onChange:this.onChange,label:"Email",value:a,error:r.email,required:!0}),p.a.createElement(c.a,{htmlId:"registration-form-password",name:"password",value:o,onChange:this.onChange,quality:this.passwordQuality(o),showVisibilityToggle:!0,maxLength:50,error:r.password}),p.a.createElement("input",{type:"submit",value:"Register",onClick:this.onSubmit}))}}]),r}(p.a.Component);d.defaultProps={confirmationMessage:"Thanks for registering!",minPasswordLength:8};var m=d;n.d(r,"default",function(){return h});var h=function(e){function r(){var e,n;Object(t.a)(this,r);for(var a=arguments.length,s=new Array(a),l=0;l<a;l++)s[l]=arguments[l];return(n=Object(o.a)(this,(e=Object(i.a)(r)).call.apply(e,[this].concat(s)))).onSubmit=function(e){console.log(e)},n}return Object(s.a)(r,e),Object(a.a)(r,[{key:"render",value:function(){return p.a.createElement(m,{onSubmit:this.onSubmit})}}]),r}(p.a.Component)},function(e,r,n){"use strict";n.r(r);var t=n(0),a=n.n(t),o=function(e){var r=e.message;return a.a.createElement("div",null,"Hello ",r," ")};o.defaultProps={message:"World"};var i=o;function s(){return a.a.createElement(i,{message:"PluralSight Viewers!"})}n.d(r,"default",function(){return s})},,,,,,function(e,r,n){e.exports=n(73)},,,,,,function(e,r,n){},function(e,r,n){var t={"./ClickToEnterTextField/ExampleTextField":28,"./ClickToEnterTextField/ExampleTextField.js":28,"./ExpandingBar/ExampleBar":46,"./ExpandingBar/ExampleBar.js":46,"./ExpandingBar/IxBarExample":30,"./ExpandingBar/IxBarExample.js":30,"./EyeIcon/ExampleEye":31,"./EyeIcon/ExampleEye.js":31,"./HelloWorld/ExampleHelloWorld":49,"./HelloWorld/ExampleHelloWorld.js":49,"./IxButton/ExampleButton":32,"./IxButton/ExampleButton.js":32,"./IxButtonMulti/ExampleButtonMultiCircle":33,"./IxButtonMulti/ExampleButtonMultiCircle.js":33,"./IxButtonMulti/ExampleIxButtonMulti":34,"./IxButtonMulti/ExampleIxButtonMulti.js":34,"./Label/ExampleOptional":35,"./Label/ExampleOptional.js":35,"./Label/ExampleRequired":36,"./Label/ExampleRequired.js":36,"./PasswordInput/ExampleAllFeatures":37,"./PasswordInput/ExampleAllFeatures.js":37,"./ProgressBar/Example100Percent":38,"./ProgressBar/Example100Percent.js":38,"./ProgressBar/Example10Percent":39,"./ProgressBar/Example10Percent.js":39,"./ProgressBar/Example50Percent":40,"./ProgressBar/Example50Percent.js":40,"./RegistrationForm/ExampleRegistrationForm":48,"./RegistrationForm/ExampleRegistrationForm.js":48,"./TextInput/ExampleError":41,"./TextInput/ExampleError.js":41,"./TextInput/ExampleOptional":42,"./TextInput/ExampleOptional.js":42,"./TextInputBEM/ExampleError":47,"./TextInputBEM/ExampleError.js":47,"./TextInputCSSModules/ExampleError":45,"./TextInputCSSModules/ExampleError.js":45,"./TextInputStyledComponents/ExampleError":44,"./TextInputStyledComponents/ExampleError.js":44,"./Tooltip/TooltipExample":43,"./Tooltip/TooltipExample.js":43};function a(e){var r=o(e);return n(r)}function o(e){var r=t[e];if(!(r+1)){var n=new Error("Cannot find module '"+e+"'");throw n.code="MODULE_NOT_FOUND",n}return r}a.keys=function(){return Object.keys(t)},a.resolve=o,e.exports=a,a.id=62},,,,,,function(e,r,n){},,,,,function(e,r,n){"use strict";n.r(r);var t=n(0),a=n.n(t),o=n(12),i=n.n(o),s=(n(61),n(1)),l=n(2),p=n(4),u=n(3),c=n(5),d=function(e){var r=e.components;return a.a.createElement("ul",{className:"navigation"},r.map(function(e){return a.a.createElement("li",{key:e},a.a.createElement("a",{href:"#".concat(e)},e))}))},m=n(23),h=n.n(m),g=n(50),f=n.n(g),y=function(e){function r(){return Object(s.a)(this,r),Object(p.a)(this,Object(u.a)(r).apply(this,arguments))}return Object(c.a)(r,e),Object(l.a)(r,[{key:"componentDidMount",value:function(){h.a.registerLanguage("javascript",f.a),h.a.highlightBlock(this.element)}},{key:"render",value:function(){var e=this;return a.a.createElement("pre",{ref:function(r){e.element=r}},a.a.createElement("code",null,this.props.children))}}]),r}(a.a.Component),x=function(e){function r(e){var n;return Object(s.a)(this,r),(n=Object(p.a)(this,Object(u.a)(r).call(this,e))).toggleCode=function(e){e.preventDefault(),n.setState(function(e){return{showCode:!e.showCode}})},n.state={showCode:!1},n}return Object(c.a)(r,e),Object(l.a)(r,[{key:"render",value:function(){var e=this.state.showCode,r=this.props.example,t=r.code,o=r.description,i=r.name,s=n(62)("./".concat(this.props.componentName,"/").concat(i)).default;return a.a.createElement("div",{className:"example"},o&&a.a.createElement("h4",null,o),a.a.createElement(s,null),a.a.createElement("p",null,a.a.createElement("a",{href:"#",onClick:this.toggleCode},e?"Hide":"Show"," Code")),e&&a.a.createElement(y,null,t))}}]),r}(a.a.Component),b=function(e){var r=e.props;return a.a.createElement("table",{className:"props"},a.a.createElement("thead",null,a.a.createElement("tr",null,a.a.createElement("th",null,"Name"),a.a.createElement("th",null,"Description"),a.a.createElement("th",null,"Type"),a.a.createElement("th",null,"Default"),a.a.createElement("th",null,"Required"))),a.a.createElement("tbody",null,Object.keys(r).map(function(e){return a.a.createElement("tr",{key:e},a.a.createElement("td",null,e),a.a.createElement("td",null,r[e].description),a.a.createElement("td",null,r[e].type.name),a.a.createElement("td",null,r[e].defaultValue&&r[e].defaultValue.value),a.a.createElement("td",null,r[e].required&&"X"))})))},v=function(e){var r=e.component,n=r.name,t=r.description,o=r.props,i=r.examples;return a.a.createElement("div",{className:"componentpage"},a.a.createElement("h2",null,n),a.a.createElement("p",null,t),a.a.createElement("h3",null,"Example",i.length>1&&"s"),i.length>0?i.map(function(e){return a.a.createElement(x,{key:e.code,example:e,componentName:n})}):"No Examples Exist.",a.a.createElement("h3",null,"Props"),o?a.a.createElement(b,{props:o}):"This component accepts no props.")},w=n(21),E=n.n(w),T=function(e){function r(e){var n;return Object(s.a)(this,r),(n=Object(p.a)(this,Object(u.a)(r).call(this,e))).state={route:window.location.hash.substr(1)},n}return Object(c.a)(r,e),Object(l.a)(r,[{key:"componentDidMount",value:function(){var e=this;window.addEventListener("hashchange",function(){e.setState({route:window.location.hash.substr(1)})})}},{key:"render",value:function(){var e=this.state.route,r=e?E.a.filter(function(r){return r.name===e})[0]:E.a[0];return a.a.createElement("div",null,a.a.createElement(d,{components:E.a.map(function(e){return e.name})}),a.a.createElement(v,{component:r}))}}]),r}(a.a.Component);Boolean("localhost"===window.location.hostname||"[::1]"===window.location.hostname||window.location.hostname.match(/^127(?:\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/));n(71),n(72);i.a.render(a.a.createElement(T,null),document.getElementById("root")),"serviceWorker"in navigator&&navigator.serviceWorker.ready.then(function(e){e.unregister()})}],[[55,1,2]]]);
//# sourceMappingURL=main.e7a184cb.chunk.js.map